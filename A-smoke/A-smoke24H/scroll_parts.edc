images {
   image: "images/sb_thumb.png" COMP;
   image: "images/sb_down_active.png" COMP;
   image: "images/sb_down.png" COMP;
   image: "images/sb_up_active.png" COMP;
   image: "images/sb_up.png" COMP;
   //~ image: "images/sbar_bg.png" COMP; / Unused
   image: "images/sb_barv.png" COMP;
   image: "images/sb_barv_active.png" COMP;
   //~ image: "images/sb_barh.png" COMP;
   image: "images/sb_port.png" COMP;
   image: "images/sb_vtrough.png" COMP;
}

part {
   name: "whole";
   mouse_events: 0;
   type: RECT;
   description {
      state: "default" 0.0;
      color: LTGRAY 255;
   }
}
// This clip area will put the list "under" the view port and scroll
// bar.
part {
   name: "clipper";
   type: RECT;
   mouse_events: 0;
   description {
      state: "default" 0.0;
      rel1 {
         to: "whole";
         offset: 4 4;
      }
      rel2 {
         to: "whole";
         offset: -5 -5;
      }
   }
}
part {
   name: "e.swallow.content";
   clip_to: "clipper";
   type: SWALLOW;
   description {
      state: "default" 0.0;
      rel1 {
         offset: 4 4;
      }
      rel2 {
         relative: 0.0 1.0;
         offset: -1 -1;
         to_x: "sb_vbar";
      }
   }
}
// The easy method: slap a view port over the clipped list.
part {
   name: "view_port";
   mouse_events: 0;
   description {
      state: "default" 0.0;
      rel1 {
         to: "whole";
         offset: 2 0;
      }
      rel2 {
         relative: 0.0 1.0;
         offset: -1 -1;
         to: "sb_vbar";
      }
      image {
         normal: "images/sb_port.png";
         border: 4 4 4 4;
      }
      fill {
         smooth : 0;
      }
   }
}
// This is a clip region for the vertical scrollbar (trough, up/down
// arrows, and slider). This is needed so the scrollbar can hide when
// the container stretches and exposes the entire item list.
part {
   name: "sb_vbar";
   type: RECT;
   mouse_events: 0;
   description {
      state: "default" 0.0;
      min: 16 16;
      align: 1.0 0.0;
      rel1 {
         to: "whole";
         relative: 1.0 0.0;
         offset: -3 0;
      }
      rel2 {
         to: "whole";
         relative: 1.0 1.0;
         offset: -3 -1;
      }
   }
   description {
      state: "hidden" 0.0;
      visible: 0;
      max: 0 99999;
      rel1 {
         to: "whole";
         relative: 1.0 0.0;
         offset: -2 4;
      }
      rel2 {
         to: "whole";
         relative: 1.0 1.0;
         offset: -2 -1;
      }
   }
}
part {
   name: "sb_vbar_trough";
   mouse_events: 0;
   clip_to: "sb_vbar";
   description {
      state: "default" 0.0;
      rel1.to: "sb_vbar";
      rel2.to: "sb_vbar";
      image {
         normal: "images/sb_vtrough.png";
         border: 1 4 4 4;
      }
   }
}
// This gives us something to which the draggable scroller can be confined.
part {
   name: "sb_vbar_base";
   type: RECT;
   clip_to: "sb_vbar";
   mouse_events: 1;
   description {
      state: "default" 0.0;
      color: 0 0 0 0;
      rel1 {
         relative: 0.0 1.0;
         offset: 0 0;
         to: "sb_vbar_a1";
      }
      rel2 {
         relative: 1.0 0.0;
         offset: -1 -1;
         to: "sb_vbar_a2";
      }
   }
}
// Event region above the vertical scroller
part {
   name: "sb_vbar_p1";
   type: RECT;
   clip_to: "sb_vbar";
   mouse_events: 1;
   description {
      state: "default" 0.0;
      color: 0 0 0 0;
      rel1 {
         relative: 0.0 1.0;
         offset: 0 0;
         to: "sb_vbar_a1";
      }
      rel2 {
         relative: 1.0 0.0;
         offset: -1 -1;
         to: "e.dragable.vbar";
      }
   }
}
// Event region below the vertical scroller
part {
   name: "sb_vbar_p2";
   type: RECT;
   clip_to: "sb_vbar";
   mouse_events: 1;
   description {
      state: "default" 0.0;
      color: 0 0 0 0;
      rel1 {
         relative: 0.0 1.0;
         offset: 0 0;
         to: "e.dragable.vbar";
      }
      rel2 {
         relative: 1.0 0.0;
         offset: -1 -1;
         to: "sb_vbar_a2";
      }
   }
}
part {
   name: "e.dragable.vbar";
   clip_to: "sb_vbar";
   mouse_events: 1;
   dragable {
      x: 0 0 0;
      y: 1 1 0;
      confine: "sb_vbar_base";
   }
   description {
      state: "default" 0.0;
//      min: 11 28;
      min: 11 64;
      max: 11 9999;
      rel1 {
         relative: 0.5 0.5;
         offset: 0 0;
         to: "sb_vbar_base";
      }
      rel2 {
         relative: 0.5 0.5;
         offset: 0 0;
         to: "sb_vbar_base";
      }
      image {
         normal: "images/sb_barv.png";
         border: 2 2 5 5;
      }
   }
   description {
      state: "active" 0.0;
      inherit: "default" 0.0;
      image {
         normal: "images/sb_barv_active.png";
         border: 2 2 5 5 ;
      }
   }
   description {
      state: "clicked" 0.0;
      inherit: "active" 0.0;
   }
}

part {
   name: "vbar_bar_thumb";
   clip_to: "sb_vbar";
   mouse_events: 0;
   description {
      state: "default" 0.0;
      max: 9 13;
      min: 9 13;
      rel1 {
         to: "e.dragable.vbar";
      }
      rel2 {
         to: "e.dragable.vbar";
      }
      image {
         normal: "images/sb_thumb.png";
      }
   }
}

// this is the up-arrow button at the top-right
part {
   name: "sb_vbar_a1";
   type: IMAGE;
   mouse_events: 1;
   clip_to: "sb_vbar";
   description {
      state: "default" 0.0;
      align: 0.5 0.0;
      aspect: 1.0 1.0;
      aspect_preference: HORIZONTAL;
      rel1 {
         to: "sb_vbar_trough";
         relative: 0.0 0.0;
         offset: 1 4;
      }
      rel2 {
         to: "sb_vbar_trough";
         relative: 1.0 1.0;
         offset: -5 -2;
      }
      image {
         normal: "images/check_out.png";
         border: 1 1 1 1;
      }
   }
   description {
      state: "clicked" 0.0;
      inherit: "default" 0.0;
      image {
         normal: "images/check_in.png";
         border: 1 1 1 1;
      }
   }
}
part {
   name: "up_arrow";
   mouse_events: 0;
   clip_to: "sb_vbar";
   description {
      state: "default" 0.0;
      min: 5 3;
      max: 5 3;
      rel1.to: "sb_vbar_a1";
      rel2.to: "sb_vbar_a1";
      image {
         normal: "images/sb_up.png";
      }
   }
   description {
      state: "active" 0.0;
      inherit: "default" 0.0;
      image {
         normal: "images/sb_up_active.png";
      }
   }
}
// down-arrow at lower-right
part {
   name: "sb_vbar_a2";
   type: IMAGE;
   mouse_events: 1;
   clip_to: "sb_vbar";
   description {
      state: "default" 0.0;
      aspect: 1.0 1.0;
      aspect_preference: HORIZONTAL;
      rel1 {
         to: "sb_vbar_trough";
         relative: 1.0 1.0;
         offset: -15 -14;
      }
      rel2 {
         to: "sb_vbar_trough";
         relative: 1.0 1.0;
         offset: -5 -5;
      }
      image {
         normal: "images/check_out.png";
         border: 1 1 1 1;
      }
   }
   description {
      state: "clicked" 0.0;
      inherit: "default" 0.0;
      image {
         normal: "images/check_in.png";
         border: 1 1 1 1;
      }
   }
}
part {
   name: "down_arrow";
   mouse_events: 0;
   clip_to: "sb_vbar";
   description {
      state: "default" 0.0;
      min: 5 3;
      max: 5 3;
      rel1.to: "sb_vbar_a2";
      rel2.to: "sb_vbar_a2";
      image {
         normal: "images/sb_down.png";
      }
   }
   description {
      state: "active" 0.0;
      inherit: "default" 0.0;
      image {
         normal: "images/sb_down_active.png";
      }
   }
}
COMMON_FOCUS_PART()
